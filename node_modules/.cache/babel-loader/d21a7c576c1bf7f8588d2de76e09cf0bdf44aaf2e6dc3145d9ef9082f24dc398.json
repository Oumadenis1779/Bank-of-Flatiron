{"ast":null,"code":"var _jsxFileName = \"/home/dennies/Bank-of-Flatiron/src/components/TransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionForm({\n  onAddTransaction\n}) {\n  _s();\n  const [category, setCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Validate input fields, you can add more validation logic here\n\n    // Create a new transaction object\n    const newTransaction = {\n      category: category,\n      description: description,\n      amount: parseFloat(amount) // Parse amount as a float\n    };\n\n    // Call the callback function to add the new transaction\n    onAddTransaction(newTransaction);\n\n    // Reset input fields after submission\n    setCategory('');\n    setDescription('');\n    setAmount('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"category\",\n      children: \"Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"category\",\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"amount\",\n      children: \"Amount:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionForm, \"qZ7EOgpznAYk3rsDnnKdT0yDCqg=\");\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TransactionForm","onAddTransaction","_s","category","setCategory","description","setDescription","amount","setAmount","handleSubmit","event","preventDefault","newTransaction","parseFloat","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/home/dennies/Bank-of-Flatiron/src/components/TransactionForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TransactionForm({ onAddTransaction }) {\n  const [category, setCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Validate input fields, you can add more validation logic here\n\n    // Create a new transaction object\n    const newTransaction = {\n      category: category,\n      description: description,\n      amount: parseFloat(amount), // Parse amount as a float\n    };\n\n    // Call the callback function to add the new transaction\n    onAddTransaction(newTransaction);\n\n    // Reset input fields after submission\n    setCategory('');\n    setDescription('');\n    setAmount('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"category\">Category:</label>\n      <input\n        type=\"text\"\n        id=\"category\"\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n        required\n      />\n\n      <label htmlFor=\"description\">Description:</label>\n      <input\n        type=\"text\"\n        id=\"description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        required\n      />\n\n      <label htmlFor=\"amount\">Amount:</label>\n      <input\n        type=\"number\"\n        id=\"amount\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n        required\n      />\n\n      <button type=\"submit\">Add Transaction</button>\n    </form>\n  );\n}\n\nexport default TransactionForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}